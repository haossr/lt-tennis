# This is a basic workflow to help you get started with Actions

name: Book Tennis Court (hourly revisit)

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "0 * * * *"  # Runs at the start of every hour

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out the code
        uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Set up the environment
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser
      
      # Cache pip dependencies
      - name: Cache pip packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip  # Directory to cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}  # Unique cache key based on OS and hash of requirements.txt
          restore-keys: ${{ runner.os }}-pip- 

      # Install dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Export GOOGLE_APPLICATION_CREDENTIALS
        run: echo "${{ secrets.GOOGLE_SERVICE_ACCOUNT }}" > "${HOME}/service_account.json"

      # Runs a set of commands using the runners shell
      - name: Run the reservation script
        run: |
          next_saturday=$(date -d "next saturday" +"%m/%d/%Y")
          next_sunday=$(date -d "next sunday" +"%m/%d/%Y")
          echo "Next Saturday: $next_saturday"
          echo "Next Sunday: $next_sunday"
          python booking.py --reservation_date "$next_saturday" --start_time_text 8:30am 8:00am --max_attempts 2 --interval_duration 90
          python booking.py --reservation_date "$next_sunday" --start_time_text 8:30am 8:00am --max_attempts 2 --interval_duration 90
          python booking.py --reservation_date "$next_saturday" --start_time_text 8:30am 8:00am 9:00am --max_attempts 2 --interval_duration 60
          python booking.py --reservation_date "$next_sunday" --start_time_text 8:30am 8:00am 9:00am --max_attempts 2 --interval_duration 60
          
        env: # Or as an environment variable
          LT_USERNAME: ${{ secrets.LT_USERNAME }}
          LT_PASSWORD: ${{ secrets.LT_PASSWORD }}
          CALENDAR_ID: ${{ vars.CALENDAR_ID }}
